# services/apple_service.py
# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API Apple: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–µ–π/–∫–≤–∏—Ç–∞–Ω—Ü–∏–π –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç App Store.
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ appstoreserverlibrary –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ JWT –æ—Ç Apple –∏ –≤—ã–∑–æ–≤–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ API Apple –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.

import os
from appstoreserverlibrary import AppStoreServerAPIClient, SignedDataVerifier, VerificationException
from appstoreserverlibrary.models.Environment import Environment
from appstoreserverlibrary.signed_data_verifier import SignedDataVerifier
from appstoreserverlibrary.receipt_utility import ReceiptUtility
from models.models import User
from src import config
import glob

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ App Store Server API –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ startup-event FastAPI)
private_key_path = config.AppleConfig.private_key_path  # –ø—É—Ç—å –∫ .p8 –∫–ª—é—á—É –¥–ª—è App Store API
if private_key_path and os.path.exists(private_key_path):
    private_key = open(private_key_path, "r").read()
else:
    private_key = None


appstore_client = None
if private_key:
    appstore_client = AppStoreServerAPIClient(private_key, key_id, issuer_id, bundle_id, environment)
# –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ root —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã Apple –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –ø—É—Ç–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
root_certs_paths = os.getenv("APPLE_ROOT_CERTS", "")  # —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é


# üìÅ Read raw DER bytes from the .cer files
root_certificates = []
for der in glob.glob(f"{config.AppleConfig.apple_certs_dirpath}/*.cer"):
    with open(der, "rb") as f:
        root_certificates.append(f.read())


signed_data_verifier = None
if root_certificates:
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π/—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    signed_data_verifier = SignedDataVerifier(
        root_certificates=root_certificates,
        enable_online_checks=True,
        environment=Environment.SANDBOX if config.AppleConfig.is_sendbox else Environment.PRODUCTION,
        bundle_id=config.AppleConfig.bundle_id,
    )




async def verify_purchase_with_apple(purchase_event) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ Apple. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞ –∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –Ω–∞—à–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é."""
    try:
        if purchase_event.transaction_receipt:
            # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–≤–∏—Ç–∞–Ω—Ü–∏—è (–¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ StoreKit), –ø—Ä–æ–≤–µ—Ä–∏–º –µ—ë
            # (–ü—Ä–∏–º–µ—Ä: –∏–∑–≤–ª–µ–∫–∞–µ–º ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –æ—Ç–≤–µ—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—É—é –ø–æ–∫—É–ø–∫—É)
            receipt_util = ReceiptUtility()
            transaction_id = receipt_util.extract_transaction_id_from_app_receipt(purchase_event.transaction_receipt)
            if transaction_id != purchase_event.transaction_id:
                return False
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å get_transaction_history –∏–ª–∏ get_status —á–µ—Ä–µ–∑ appstore_client.
        elif signed_data_verifier:
            # –í StoreKit2 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ JWS (–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω), 
            # –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ verify_and_decode_notification (—Ö–æ—Ç—è —ç—Ç–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è server notifications).
            # –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –ø–æ–¥–ø–∏—Å—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (signedTransactionInfo), –º–æ–∂–Ω–æ –µ–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å:
            # payload = signed_data_verifier.verify_and_decode_notification(purchase_event.transaction_receipt)
            pass
        # –ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏: –≤—ã–∑—ã–≤–∞—Ç—å appstore_client.get_transaction_history(...) –∏–ª–∏ get_status(...) –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏.
        return True
    except VerificationException as e:
        # –ù–µ–≤–∞–ª–∏–¥–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –∏–ª–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏—è
        return False

async def handle_apple_notification(notification_jws: str, session: "AsyncSession"):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç Apple (App Store Server Notification v2)."""
    if not signed_data_verifier:
        return
    try:
        # –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        payload = signed_data_verifier.verify_and_decode_notification(notification_jws)
    except VerificationException as e:
        print("Failed to verify Apple notification signature:", e)
        return
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ payload –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è
    notification_type = payload["notificationType"]  # –Ω–∞–ø—Ä–∏–º–µ—Ä, INITIAL_BUY, DID_RENEW, CANCEL, REFUND –∏ —Ç.–¥.
    subtype = payload.get("subtype")  # –ø–æ–¥—Ç–∏–ø —Å–æ–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, VOLUNTARY, BILLING_RETRY, etc)
    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É:
    # –ù–∞–ø—Ä–∏–º–µ—Ä:
    # - INITIAL_BUY: –ø–µ—Ä–≤–∞—è –ø–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (–º–æ–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ activate_subscription)
    # - DID_RENEW / DID_RECOVER: —É—Å–ø–µ—à–Ω–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ (renew_subscription)
    # - CANCEL: –ø–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –¥–æ—Å—Ä–æ—á–Ω–æ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç (cancel_subscription)
    # - EXPIRED: —Å—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫ –±–µ–∑ –ø—Ä–æ–¥–ª–µ–Ω–∏—è (cancel_subscription)
    # - REFUND: –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ (–º–æ–∂–Ω–æ —Å–ø–∏—Å–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫—Ä–µ–¥–∏—Ç—ã)
    original_tx_id = payload["data"]["originalTransactionId"]
    product_id = payload["data"]["productId"]
    user = await session.execute(select(User).where(User.subscription.has(original_transaction_id=original_tx_id)))
    user = user.scalar_one_or_none()
    if not user:
        return  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º original_transaction_id –Ω–µ –Ω–∞–π–¥–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –Ω–∞—à –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª–æ)
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    sub = user.subscription
    if notification_type == "INITIAL_BUY":
        # –ø–æ–¥–ø–∏—Å–∫–∞ –≤–ø–µ—Ä–≤—ã–µ –∫—É–ø–ª–µ–Ω–∞ (–≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ Apple –ø—Ä–∏—à–ª–µ—Ç —Ç–∞–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
        # –ó–¥–µ—Å—å –æ–±—ã—á–Ω–æ –∫—Ä–µ–¥–∏—Ç—ã —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω—ã —á–µ—Ä–µ–∑ client->validate, –Ω–æ –º–æ–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ
        sub.is_active = True
    elif notification_type in ("DID_RENEW", "DID_RECOVER"):
        # –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞ –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
        await renew_subscription(session, sub, credits_on_renew=<—á–∏—Å–ª–æ_–∫—Ä–µ–¥–∏—Ç–æ–≤_–∑–∞_–ø–µ—Ä–∏–æ–¥>)
    elif notification_type == "EXPIRED":
        # —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç–µ–∫ –±–µ–∑ –ø—Ä–æ–¥–ª–µ–Ω–∏—è
        await cancel_subscription(session, sub, reason="expired")
    elif notification_type == "CANCEL":
        # –ø–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø–∏—Å–∞–ª—Å—è –∏–ª–∏ Apple –≤–æ–∑–º–µ—Å—Ç–∏–ª–∞)
        await cancel_subscription(session, sub, reason="canceled")
    elif notification_type == "REFUND":
        # –ø—Ä–æ–∏–∑–æ—à–µ–ª –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ –ø–æ–∫—É–ø–∫–µ
        # –º–æ–∂–Ω–æ —Å–Ω—è—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫—Ä–µ–¥–∏—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞–≤–∞–ª–∏—Å—å, –Ω–∞–ø—Ä–∏–º–µ—Ä:
        refunded_amount = <–∫—Ä–µ–¥–∏—Ç—ã_–∑–∞_–ø–µ—Ä–∏–æ–¥>  # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∫–æ–ª—å–∫–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –≤–µ—Ä–Ω—É—Ç—å/–∑–∞–º–æ—Ä–æ–∑–∏—Ç—å
        sub.is_active = False
        sub.grace_until = datetime.utcnow()  # –æ—Ç–º–µ–Ω—è–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        user.credit_balance -= refunded_amount  # —É–±–∏—Ä–∞–µ–º –∫—Ä–µ–¥–∏—Ç—ã, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥
        session.add(CreditTransaction(
            user_id=user.id,
            change=-refunded_amount,
            reason="refund",
            related_product_id=product_id,
            related_transaction_id=original_tx_id
        ))
    # –î—Ä—É–≥–∏–µ —Ç–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (DID_CHANGE_RENEWAL_STATUS, PRICE_INCREASE_CONSENT etc.) –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
